/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as homeIndexImport } from './routes/(home)/index'
import { Route as adminAdminImport } from './routes/(admin)/_admin'
import { Route as catalogCatalogIndexImport } from './routes/(catalog)/catalog.index'
import { Route as AuthenticatedprofileProfileImport } from './routes/_authenticated/(profile)/profile'
import { Route as catalogCatalogSearchImport } from './routes/(catalog)/catalog.search'
import { Route as catalogCatalogCatalogIdImport } from './routes/(catalog)/catalog.$catalogId'
import { Route as adminSignInAdminImport } from './routes/(admin)/sign-in.admin'
import { Route as AuthenticateddashboardPlannerIndexImport } from './routes/_authenticated/(dashboard)/planner.index'
import { Route as AuthenticateddashboardPlannerResultImport } from './routes/_authenticated/(dashboard)/planner.result'
import { Route as adminAdminAdminDashboardImport } from './routes/(admin)/_admin/admin.dashboard'

// Create Virtual Routes

const adminImport = createFileRoute('/(admin)')()

// Create/Update Routes

const adminRoute = adminImport.update({
  id: '/(admin)',
  getParentRoute: () => rootRoute,
})

const SignUpRoute = SignUpImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
})

const SignInRoute = SignInImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
})

const ContactRoute = ContactImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
})

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
})

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
})

const homeIndexRoute = homeIndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
})

const adminAdminRoute = adminAdminImport.update({
  id: '/_admin',
  getParentRoute: () => adminRoute,
})

const catalogCatalogIndexRoute = catalogCatalogIndexImport.update({
  path: '/catalog/',
  getParentRoute: () => rootRoute,
})

const AuthenticatedprofileProfileRoute =
  AuthenticatedprofileProfileImport.update({
    path: '/profile',
    getParentRoute: () => AuthenticatedRoute,
  })

const catalogCatalogSearchRoute = catalogCatalogSearchImport.update({
  path: '/catalog/search',
  getParentRoute: () => rootRoute,
})

const catalogCatalogCatalogIdRoute = catalogCatalogCatalogIdImport.update({
  path: '/catalog/$catalogId',
  getParentRoute: () => rootRoute,
})

const adminSignInAdminRoute = adminSignInAdminImport.update({
  path: '/sign-in/admin',
  getParentRoute: () => adminRoute,
})

const AuthenticateddashboardPlannerIndexRoute =
  AuthenticateddashboardPlannerIndexImport.update({
    path: '/planner/',
    getParentRoute: () => AuthenticatedRoute,
  })

const AuthenticateddashboardPlannerResultRoute =
  AuthenticateddashboardPlannerResultImport.update({
    path: '/planner/result',
    getParentRoute: () => AuthenticatedRoute,
  })

const adminAdminAdminDashboardRoute = adminAdminAdminDashboardImport.update({
  path: '/admin/dashboard',
  getParentRoute: () => adminAdminRoute,
})

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedprofileProfileRoute,
    AuthenticateddashboardPlannerResultRoute,
    AuthenticateddashboardPlannerIndexRoute,
  }),
  AboutRoute,
  ContactRoute,
  SignInRoute,
  SignUpRoute,
  adminRoute: adminRoute.addChildren({
    adminAdminRoute: adminAdminRoute.addChildren({
      adminAdminAdminDashboardRoute,
    }),
    adminSignInAdminRoute,
  }),
  homeIndexRoute,
  catalogCatalogCatalogIdRoute,
  catalogCatalogSearchRoute,
  catalogCatalogIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/_authenticated",
        "/about",
        "/contact",
        "/sign-in",
        "/sign-up",
        "/",
        "/",
        "/catalog/$catalogId",
        "/catalog/search",
        "/catalog/"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.jsx",
      "children": [
        "/_authenticated/profile",
        "/_authenticated/planner/result",
        "/_authenticated/planner/"
      ]
    },
    "/about": {
      "filePath": "about.jsx"
    },
    "/contact": {
      "filePath": "contact.jsx"
    },
    "/sign-in": {
      "filePath": "sign-in.jsx"
    },
    "/sign-up": {
      "filePath": "sign-up.jsx"
    },
    "/": {
      "filePath": "(home)/index.jsx"
    },
    "/_admin": {
      "filePath": "(admin)/_admin.jsx",
      "parent": "/",
      "children": [
        "/_admin/admin/dashboard"
      ]
    },
    "/sign-in/admin": {
      "filePath": "(admin)/sign-in.admin.jsx",
      "parent": "/"
    },
    "/catalog/$catalogId": {
      "filePath": "(catalog)/catalog.$catalogId.jsx"
    },
    "/catalog/search": {
      "filePath": "(catalog)/catalog.search.jsx"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/(profile)/profile.jsx",
      "parent": "/_authenticated"
    },
    "/catalog/": {
      "filePath": "(catalog)/catalog.index.jsx"
    },
    "/_admin/admin/dashboard": {
      "filePath": "(admin)/_admin/admin.dashboard.jsx",
      "parent": "/_admin"
    },
    "/_authenticated/planner/result": {
      "filePath": "_authenticated/(dashboard)/planner.result.jsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/planner/": {
      "filePath": "_authenticated/(dashboard)/planner.index.jsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
